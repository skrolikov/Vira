{
    "swagger": "2.0",
    "info": {
        "description": "Сервис авторизации Vira.",
        "title": "Vira ID API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Поддержка Vira",
            "url": "http://vira.example.com/support",
            "email": "support@vira.example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "vira-id:8000",
    "basePath": "/",
    "paths": {
        "/auth/confirm": {
            "get": {
                "description": "Подтверждает пользователя по email и токену подтверждения. Требует обязательные параметры email и token в query string.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Подтверждение пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email пользователя для подтверждения",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Токен подтверждения, отправленный пользователю на email",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно подтверждён",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "необходимо указать email и токен\" или \"не удалось подтвердить пользователя: описание ошибки",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизация по логину и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход",
                "parameters": [
                    {
                        "description": "Данные входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Удаляет refresh токен и завершает сессию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Выход",
                "parameters": [
                    {
                        "description": "Refresh токен",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает ID и имя пользователя, основываясь на информации из JWT (или другого механизма аутентификации).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Получить информацию о текущем пользователе",
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/types.UserInfo"
                        }
                    },
                    "401": {
                        "description": "unauthorized\" \"Пользователь не аутентифицирован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "user not found\" \"Пользователь не найден в базе данных",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Обновляет пару токенов по refresh-токену",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление токена",
                "parameters": [
                    {
                        "description": "Refresh токен",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TokenPair"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Создание нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация",
                "parameters": [
                    {
                        "description": "Данные регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/types.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список активных сессий текущего пользователя. Поддерживается пагинация с помощью параметра cursor.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Сессии"
                ],
                "summary": "Получить список сессий пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Курсор для пагинации (числовое значение). Если не указан, возвращает первые 20 сессий.",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сессий и следующий курсор для пагинации",
                        "schema": {
                            "$ref": "#/definitions/types.SessionsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid cursor\" \"Неверный формат курсора",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized\" \"Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет сессию пользователя из Redis по ID сессии. Также удаляет refresh-токен, если он совпадает с удаляемой сессией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Сессии"
                ],
                "summary": "Удалить сессию пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID сессии для удаления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Сессия успешно удалена"
                    },
                    "400": {
                        "description": "Неверный ID сессии",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized\" \"Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.AuthResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "description": "Пара токенов доступа",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.TokenPair"
                        }
                    ]
                },
                "user": {
                    "description": "Данные пользователя",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.UserInfo"
                        }
                    ]
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Текст ошибки",
                    "type": "string",
                    "example": "Неверный токен"
                }
            }
        },
        "types.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Пароль",
                    "type": "string",
                    "example": "secret123"
                },
                "username": {
                    "description": "Имя пользователя",
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "types.LogoutRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "description": "Refresh токен",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsIn..."
                }
            }
        },
        "types.RefreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "description": "Refresh токен",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsIn..."
                }
            }
        },
        "types.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email (опционально)",
                    "type": "string",
                    "example": "john@example.com"
                },
                "password": {
                    "description": "Пароль",
                    "type": "string",
                    "example": "secret123"
                },
                "username": {
                    "description": "Имя пользователя",
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "types.SessionInfo": {
            "type": "object",
            "properties": {
                "device": {
                    "description": "Информация о устройстве / User-Agent",
                    "type": "string",
                    "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
                },
                "id": {
                    "description": "Уникальный ID сессии",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "ip": {
                    "description": "IP адрес сессии",
                    "type": "string",
                    "example": "192.168.1.10"
                },
                "login_time": {
                    "description": "Время входа в сессию (ISO 8601)",
                    "type": "string",
                    "example": "2025-06-12T14:22:35Z"
                },
                "token": {
                    "description": "Токен сессии (может быть обрезан)",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user_id": {
                    "description": "ID пользователя",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "types.SessionsResponse": {
            "type": "object",
            "properties": {
                "cursor": {
                    "description": "Курсор для следующей страницы (0 — начало)",
                    "type": "integer",
                    "example": 0
                },
                "sessions": {
                    "description": "Список сессий пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.SessionInfo"
                    }
                }
            }
        },
        "types.TokenPair": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Access токен",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsIn..."
                },
                "refresh_token": {
                    "description": "Refresh токен",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsIn..."
                }
            }
        },
        "types.UserInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Уникальный ID пользователя",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "role": {
                    "description": "Роль пользователя",
                    "type": "string",
                    "example": "user"
                },
                "username": {
                    "description": "Имя пользователя",
                    "type": "string",
                    "example": "john_doe"
                }
            }
        }
    }
}